---
name: json test
on:
  workflow_dispatch:
  
jobs:
  something:
    runs-on: ubuntu-latest    
    steps:
      - name: Create env file items
        run: | 
          env_file_items=$(echo '[{"AWS_ACCESS_KEY_ID":"${{ secrets.TEST }}"}, {"AWS_SECRET_ACCESS_KEY":"${{ secrets.TEST }}"}, {"AUTH_TOKEN":"${{ secrets.TEST }}"}, {"CONTENTFUL_ACCESS_TOKEN":"${{ secrets.TEST }}"}, { "CONTENTFUL_CHEDDAR_CDA_TOKEN":"${{ secrets.TEST }}"}, "{ CONTENTFUL_CHEDDAR_SPACE_ID":"${{ secrets.TEST }}"}, {"CONTENTFUL_ENVIRONMENT_ID":"${{ secrets.TEST }}"}, {"CONTENTFUL_NEWS12_CDA_TOKEN":"${{ secrets.TEST }}"}, "{ CONTENTFUL_NEWS12_SPACE_ID":"${{ secrets.TEST }}"}, {"SENTRY_DSN":"${{ secrets.TEST }}"},"{ SLACK_FEED_ALERT_WEBHOOK_URL":"${{ secrets.TEST }}"}]'
        id: set_env_file

      - name: Use Env File Items
        run: |
          echo "$ENV_FILE_ITEMS"
        env:
          ENV_FILE_ITEMS: ${{ steps.set_env_file.outputs.ENV_FILE_ITEMS }}
        id: use_env_file
          
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: sss sss
        run: |
          items="${{ inputs.env_file_items }}"
          names=()
          for row in $(echo "${items}" | jq -r '.[]'); do
              name=$(echo "${row}" | jq -r '.name')
              names+=("$name")
          done
          printf "%s\n" "${names[@]}"
