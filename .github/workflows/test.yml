name: Deploy to staging using serverless
on:
  workflow_dispatch:
    inputs:
      branch:
        description: branch to deploy to staging using serverless
        required: false        

  repository_dispatch:
    types: [deploy-staging]

# Considered secure as they are scoped to the workflow run and are not exposed to the outside world
env:
  NOTIFY-SLACK-PATH: ./custom_actions/notify_slack.yml

jobs:
  notify-slack-build:
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack
        uses: $NOTIFY-SLACK-PATH
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          bot-core: ${{ secrets.CORE_BOTS }}
          repo-full-name: ${{ github.event.repository.full_name }}
          client-payload-ref: ${{ github.event.client_payload.ref }}

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Set up node.js version
        uses: actions/setup-node@master
        with:
          node-version: 18.x
      - run: npm install -g yarn serverless
      - run: yarn install

      - name: Serverless Authentication
        run: sls config credentials --provider aws --key ${{secrets.AWS_ACCESS_KEY_ID}} --secret ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: Deploy to staging
        run: serverless deploy --stage staging

  notify-slack-status:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Notify Slack status for successful deployment
        if: ${{ success() && needs.deploy.result == 'success' }}
        uses: $NOTIFY-SLACK-PATH
        with:
          repo-full-name: ${{ github.event.repository.full_name }}
          client-payload-ref: ${{ github.event.client_payload.ref }}
          build-status-message: 'PR Build Complete'
        secrets: inherit
  
      - name: Notify Slack status for failed deployment
        if: ${{ failure() || needs.deploy.result != 'success' }}
        uses: $NOTIFY-SLACK-PATH
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          bot-core: ${{ secrets.CORE_BOTS }}
          repo-full-name: ${{ github.event.repository.full_name }}
          client-payload-ref: ${{ github.event.client_payload.ref }}
          build-status-message: 'PR Build Failed'
